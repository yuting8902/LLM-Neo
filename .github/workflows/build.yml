name: Build & Push Docker (GHCR)

on:
  workflow_dispatch:
  push:
    branches: [ master, main ]
    paths:
      - 'docker/**'
      - '.dockerignore'
      - 'requirements.txt'
      - 'pyproject.toml'
      - 'setup.py'

env:
  IMAGE_NAME: llm-neo
  DOCKERFILE_PATH: docker/docker-cuda/Dockerfile

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Free disk space
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: true
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: false   
          swap-storage: true

      - name: Extra cleanup
        run: |
          sudo apt-get clean || true
          docker system prune -af || true

      - uses: docker/setup-buildx-action@v3
        with:
          driver-opts: |
            image=moby/buildkit:latest
          buildkitd-flags: --oci-worker-gc --oci-worker-gc-keepstorage 8GB

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set tags
        id: tags
        run: |
          SHORT_SHA=${GITHUB_SHA::7}
          echo "LATEST=ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:latest" >> $GITHUB_OUTPUT
          echo "SHA=ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${SHORT_SHA}" >> $GITHUB_OUTPUT

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ${{ env.DOCKERFILE_PATH }}
          push: true
          no-cache: true
          provenance: false
          sbom: false
          tags: |
            ${{ steps.tags.outputs.LATEST }}
            ${{ steps.tags.outputs.SHA }}
